version: '3.8'
services:
  db:
    image: postgres:13
    container_name: mlflow_db
    environment:
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
      - POSTGRES_DB=mlflow
    volumes:
      - mlflow_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U mlflow -d mlflow"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  minio:
    image: minio/minio
    container_name: mlflow_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    entrypoint: >
      sh -c "minio server /data --console-address ':9001'"
    volumes:
      - mlflow_minio_data:/data
    restart: unless-stopped

  minio-mc:
    image: minio/mc
    depends_on:
      - minio
    environment:
      - MC_HOST_local=http://minioadmin:minioadmin@minio:9000
    entrypoint: >
      sh -c "
      until (mc ready local); do sleep 1; done &&
      mc mb -p local/mlflow || true
      "
    restart: "no"

  mlflow_server:
    build: ./mlflow_server
    container_name: mlflow_server
    command: >
      mlflow server
      --backend-store-uri postgresql+psycopg2://mlflow:mlflow@db:5432/mlflow
      --default-artifact-root s3://mlflow/
      --host 0.0.0.0
      --port 5001
    environment:
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_EC2_METADATA_DISABLED=true
      - AWS_S3_ADDRESSING_STYLE=path
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
    ports:
      - "5001:5001"
    restart: unless-stopped

  model_tourism_trainer:
    build:
      context: ./modelbaru
    container_name: modelbaru_trainer
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow_server:5001
      - MLFLOW_EXPERIMENT=modelbaru
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_EC2_METADATA_DISABLED=true
      - AWS_S3_ADDRESSING_STYLE=path
      - MLFLOW_REGISTERED_MODEL=tourism-recommender-model
    depends_on:
      - mlflow_server
      - minio
    volumes:
      - ./data:/app/data
    command: >
      python train.py
      --data_csv /app/data/dataset.csv
      --target target
      --task auto
      --model rf
    restart: "no"

  fastapi_tourism_app:
    build: ./fastapibaru
    container_name: fastapi_tourism_app
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow_server:5001
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    depends_on:
      - mlflow_server
      - model_tourism_trainer
    ports:
      - "8101:8000"
    restart: unless-stopped

  prometheus_server:
    image: prom/prometheus:v2.45.0
    container_name: prometheus_server
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - fastapi_tourism_app
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana_server:
    image: grafana/grafana:9.5.3
    container_name: grafana_server
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus_server
    ports:
      - "3000:3000"
    restart: unless-stopped

  nginx_load_balancer:
    image: nginx:alpine
    ports: ["80:80"]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend:/usr/share/nginx/html:ro   # <â€” ini yg serve index.html
    depends_on:
      - fastapi_tourism_app
      - mlflow_server
      - grafana_server
      - prometheus_server
      - minio
    restart: unless-stopped

volumes:
  mlflow_db_data:
  mlflow_minio_data:
  prometheus_data:
  grafana_data:
